package com.rodger.view;

import com.rodger.Fatory.SvgFactory;
import javax.swing.JOptionPane;
import com.vividsolutions.jts.io.ParseException;
import com.vividsolutions.jts.io.WKTReader;
import java.awt.image.BufferedImage;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.io.Writer;
import java.net.MalformedURLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import org.apache.batik.transcoder.TranscoderException;
import org.apache.batik.transcoder.image.JPEGTranscoder;
import org.apache.batik.transcoder.TranscoderInput;
import org.apache.batik.transcoder.TranscoderOutput;

/**
 *
 * @author rogerio
 */
public class Geometry extends javax.swing.JFrame {

    /**
     * Creates new form Geometry
     */
    public Geometry() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel = new javax.swing.JPanel();
        geometryALabel = new javax.swing.JLabel();
        geometryBLabel = new javax.swing.JLabel();
        processButton = new javax.swing.JButton();
        equalsLabel = new javax.swing.JLabel();
        disjointLabel = new javax.swing.JLabel();
        intersectsLabel = new javax.swing.JLabel();
        touchesLabel = new javax.swing.JLabel();
        crossesLabel = new javax.swing.JLabel();
        withinLabel = new javax.swing.JLabel();
        containsLabel = new javax.swing.JLabel();
        overlapsLabel = new javax.swing.JLabel();
        coversLabel = new javax.swing.JLabel();
        coveredByLabel = new javax.swing.JLabel();
        equalsTextField = new javax.swing.JTextField();
        disjointTextField = new javax.swing.JTextField();
        intersectsTextField = new javax.swing.JTextField();
        touchesTextField = new javax.swing.JTextField();
        crossesTextField = new javax.swing.JTextField();
        withinTextField = new javax.swing.JTextField();
        containsTextField = new javax.swing.JTextField();
        overlapsTextField = new javax.swing.JTextField();
        coversTextField = new javax.swing.JTextField();
        coveredByTextField = new javax.swing.JTextField();
        geometryATextField = new javax.swing.JTextField();
        geometryBTextField = new javax.swing.JTextField();
        ABjLabel1 = new javax.swing.JLabel();
        SVGjPanel1 = new javax.swing.JPanel();
        JpgImagejLabel3 = new javax.swing.JLabel();
        equalsTextField1 = new javax.swing.JTextField();
        disjointTextField1 = new javax.swing.JTextField();
        intersectsTextField1 = new javax.swing.JTextField();
        touchesTextField1 = new javax.swing.JTextField();
        crossesTextField1 = new javax.swing.JTextField();
        withinTextField1 = new javax.swing.JTextField();
        containsTextField1 = new javax.swing.JTextField();
        overlapsTextField1 = new javax.swing.JTextField();
        coversTextField1 = new javax.swing.JTextField();
        coveredByTextField1 = new javax.swing.JTextField();
        BAjLabel4 = new javax.swing.JLabel();
        GeometryDrawjLabel6 = new javax.swing.JLabel();
        DevelopedByjLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("frame"); // NOI18N
        setResizable(false);

        panel.setBackground(new java.awt.Color(236, 240, 241));
        panel.setForeground(new java.awt.Color(44, 62, 80));

        geometryALabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        geometryALabel.setForeground(new java.awt.Color(44, 62, 80));
        geometryALabel.setText("Geometry A:");

        geometryBLabel.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        geometryBLabel.setForeground(new java.awt.Color(44, 62, 80));
        geometryBLabel.setText("Geometry B:");

        processButton.setBackground(new java.awt.Color(51, 51, 51));
        processButton.setFont(processButton.getFont().deriveFont(processButton.getFont().getStyle() | java.awt.Font.BOLD, processButton.getFont().getSize()+2));
        processButton.setForeground(new java.awt.Color(204, 204, 204));
        processButton.setText("PROCESS");
        processButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                processActionPerformed(evt);
            }
        });

        equalsLabel.setFont(equalsLabel.getFont().deriveFont(equalsLabel.getFont().getStyle() | java.awt.Font.BOLD));
        equalsLabel.setForeground(new java.awt.Color(44, 62, 80));
        equalsLabel.setText("EQUALS");

        disjointLabel.setFont(disjointLabel.getFont().deriveFont(disjointLabel.getFont().getStyle() | java.awt.Font.BOLD));
        disjointLabel.setForeground(new java.awt.Color(44, 62, 80));
        disjointLabel.setText("DISJOINT");

        intersectsLabel.setFont(intersectsLabel.getFont().deriveFont(intersectsLabel.getFont().getStyle() | java.awt.Font.BOLD));
        intersectsLabel.setForeground(new java.awt.Color(44, 62, 80));
        intersectsLabel.setText("INTERSECTS");

        touchesLabel.setFont(touchesLabel.getFont().deriveFont(touchesLabel.getFont().getStyle() | java.awt.Font.BOLD));
        touchesLabel.setForeground(new java.awt.Color(44, 62, 80));
        touchesLabel.setText("TOUCHES");

        crossesLabel.setFont(crossesLabel.getFont().deriveFont(crossesLabel.getFont().getStyle() | java.awt.Font.BOLD));
        crossesLabel.setForeground(new java.awt.Color(44, 62, 80));
        crossesLabel.setText("CROSSES");

        withinLabel.setFont(withinLabel.getFont().deriveFont(withinLabel.getFont().getStyle() | java.awt.Font.BOLD));
        withinLabel.setForeground(new java.awt.Color(44, 62, 80));
        withinLabel.setText("WITHIN");

        containsLabel.setFont(containsLabel.getFont().deriveFont(containsLabel.getFont().getStyle() | java.awt.Font.BOLD));
        containsLabel.setForeground(new java.awt.Color(44, 62, 80));
        containsLabel.setText("CONTAINS");

        overlapsLabel.setFont(overlapsLabel.getFont().deriveFont(overlapsLabel.getFont().getStyle() | java.awt.Font.BOLD));
        overlapsLabel.setForeground(new java.awt.Color(44, 62, 80));
        overlapsLabel.setText("OVERLAPS");

        coversLabel.setFont(coversLabel.getFont().deriveFont(coversLabel.getFont().getStyle() | java.awt.Font.BOLD));
        coversLabel.setForeground(new java.awt.Color(44, 62, 80));
        coversLabel.setText("COVERS");

        coveredByLabel.setFont(coveredByLabel.getFont().deriveFont(coveredByLabel.getFont().getStyle() | java.awt.Font.BOLD));
        coveredByLabel.setForeground(new java.awt.Color(44, 62, 80));
        coveredByLabel.setText("COVEREDBY");

        equalsTextField.setEditable(false);
        equalsTextField.setBackground(new java.awt.Color(236, 240, 241));
        equalsTextField.setFont(equalsTextField.getFont().deriveFont(equalsTextField.getFont().getStyle() | java.awt.Font.BOLD));
        equalsTextField.setForeground(new java.awt.Color(44, 62, 80));
        equalsTextField.setSelectionColor(new java.awt.Color(187, 187, 187));

        disjointTextField.setEditable(false);
        disjointTextField.setBackground(new java.awt.Color(236, 240, 241));
        disjointTextField.setFont(disjointTextField.getFont().deriveFont(disjointTextField.getFont().getStyle() | java.awt.Font.BOLD));
        disjointTextField.setForeground(new java.awt.Color(44, 62, 80));

        intersectsTextField.setEditable(false);
        intersectsTextField.setBackground(new java.awt.Color(236, 240, 241));
        intersectsTextField.setFont(intersectsTextField.getFont().deriveFont(intersectsTextField.getFont().getStyle() | java.awt.Font.BOLD));
        intersectsTextField.setForeground(new java.awt.Color(44, 62, 80));

        touchesTextField.setEditable(false);
        touchesTextField.setBackground(new java.awt.Color(236, 240, 241));
        touchesTextField.setFont(touchesTextField.getFont().deriveFont(touchesTextField.getFont().getStyle() | java.awt.Font.BOLD));
        touchesTextField.setForeground(new java.awt.Color(44, 62, 80));

        crossesTextField.setEditable(false);
        crossesTextField.setBackground(new java.awt.Color(236, 240, 241));
        crossesTextField.setFont(crossesTextField.getFont().deriveFont(crossesTextField.getFont().getStyle() | java.awt.Font.BOLD));
        crossesTextField.setForeground(new java.awt.Color(44, 62, 80));

        withinTextField.setEditable(false);
        withinTextField.setBackground(new java.awt.Color(236, 240, 241));
        withinTextField.setFont(withinTextField.getFont().deriveFont(withinTextField.getFont().getStyle() | java.awt.Font.BOLD));
        withinTextField.setForeground(new java.awt.Color(44, 62, 80));

        containsTextField.setEditable(false);
        containsTextField.setBackground(new java.awt.Color(236, 240, 241));
        containsTextField.setFont(containsTextField.getFont().deriveFont(containsTextField.getFont().getStyle() | java.awt.Font.BOLD));
        containsTextField.setForeground(new java.awt.Color(44, 62, 80));

        overlapsTextField.setEditable(false);
        overlapsTextField.setBackground(new java.awt.Color(236, 240, 241));
        overlapsTextField.setFont(overlapsTextField.getFont().deriveFont(overlapsTextField.getFont().getStyle() | java.awt.Font.BOLD));
        overlapsTextField.setForeground(new java.awt.Color(44, 62, 80));

        coversTextField.setEditable(false);
        coversTextField.setBackground(new java.awt.Color(236, 240, 241));
        coversTextField.setFont(coversTextField.getFont().deriveFont(coversTextField.getFont().getStyle() | java.awt.Font.BOLD));
        coversTextField.setForeground(new java.awt.Color(44, 62, 80));

        coveredByTextField.setEditable(false);
        coveredByTextField.setBackground(new java.awt.Color(236, 240, 241));
        coveredByTextField.setFont(coveredByTextField.getFont().deriveFont(coveredByTextField.getFont().getStyle() | java.awt.Font.BOLD));
        coveredByTextField.setForeground(new java.awt.Color(44, 62, 80));

        geometryATextField.setBackground(new java.awt.Color(236, 240, 241));
        geometryATextField.setFont(geometryATextField.getFont().deriveFont(geometryATextField.getFont().getStyle() | java.awt.Font.BOLD));
        geometryATextField.setForeground(new java.awt.Color(44, 62, 80));
        geometryATextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                geometryATextFieldActionPerformed(evt);
            }
        });

        geometryBTextField.setBackground(new java.awt.Color(236, 240, 241));
        geometryBTextField.setFont(geometryBTextField.getFont().deriveFont(geometryBTextField.getFont().getStyle() | java.awt.Font.BOLD));
        geometryBTextField.setForeground(new java.awt.Color(44, 62, 80));

        ABjLabel1.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        ABjLabel1.setForeground(new java.awt.Color(44, 62, 80));
        ABjLabel1.setText("AB");

        SVGjPanel1.setBackground(new java.awt.Color(153, 153, 153));

        javax.swing.GroupLayout SVGjPanel1Layout = new javax.swing.GroupLayout(SVGjPanel1);
        SVGjPanel1.setLayout(SVGjPanel1Layout);
        SVGjPanel1Layout.setHorizontalGroup(
            SVGjPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(JpgImagejLabel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        SVGjPanel1Layout.setVerticalGroup(
            SVGjPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SVGjPanel1Layout.createSequentialGroup()
                .addComponent(JpgImagejLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        equalsTextField1.setEditable(false);
        equalsTextField1.setBackground(new java.awt.Color(236, 240, 241));
        equalsTextField1.setFont(equalsTextField1.getFont().deriveFont(equalsTextField1.getFont().getStyle() | java.awt.Font.BOLD));
        equalsTextField1.setForeground(new java.awt.Color(44, 62, 80));
        equalsTextField1.setSelectionColor(new java.awt.Color(187, 187, 187));
        equalsTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equalsTextField1ActionPerformed(evt);
            }
        });

        disjointTextField1.setEditable(false);
        disjointTextField1.setBackground(new java.awt.Color(236, 240, 241));
        disjointTextField1.setFont(disjointTextField1.getFont().deriveFont(disjointTextField1.getFont().getStyle() | java.awt.Font.BOLD));
        disjointTextField1.setForeground(new java.awt.Color(44, 62, 80));

        intersectsTextField1.setEditable(false);
        intersectsTextField1.setBackground(new java.awt.Color(236, 240, 241));
        intersectsTextField1.setFont(intersectsTextField1.getFont().deriveFont(intersectsTextField1.getFont().getStyle() | java.awt.Font.BOLD));
        intersectsTextField1.setForeground(new java.awt.Color(44, 62, 80));

        touchesTextField1.setEditable(false);
        touchesTextField1.setBackground(new java.awt.Color(236, 240, 241));
        touchesTextField1.setFont(touchesTextField1.getFont().deriveFont(touchesTextField1.getFont().getStyle() | java.awt.Font.BOLD));
        touchesTextField1.setForeground(new java.awt.Color(44, 62, 80));

        crossesTextField1.setEditable(false);
        crossesTextField1.setBackground(new java.awt.Color(236, 240, 241));
        crossesTextField1.setFont(crossesTextField1.getFont().deriveFont(crossesTextField1.getFont().getStyle() | java.awt.Font.BOLD));
        crossesTextField1.setForeground(new java.awt.Color(44, 62, 80));

        withinTextField1.setEditable(false);
        withinTextField1.setBackground(new java.awt.Color(236, 240, 241));
        withinTextField1.setFont(withinTextField1.getFont().deriveFont(withinTextField1.getFont().getStyle() | java.awt.Font.BOLD));
        withinTextField1.setForeground(new java.awt.Color(44, 62, 80));

        containsTextField1.setEditable(false);
        containsTextField1.setBackground(new java.awt.Color(236, 240, 241));
        containsTextField1.setFont(containsTextField1.getFont().deriveFont(containsTextField1.getFont().getStyle() | java.awt.Font.BOLD));
        containsTextField1.setForeground(new java.awt.Color(44, 62, 80));

        overlapsTextField1.setEditable(false);
        overlapsTextField1.setBackground(new java.awt.Color(236, 240, 241));
        overlapsTextField1.setFont(overlapsTextField1.getFont().deriveFont(overlapsTextField1.getFont().getStyle() | java.awt.Font.BOLD));
        overlapsTextField1.setForeground(new java.awt.Color(44, 62, 80));

        coversTextField1.setEditable(false);
        coversTextField1.setBackground(new java.awt.Color(236, 240, 241));
        coversTextField1.setFont(coversTextField1.getFont().deriveFont(coversTextField1.getFont().getStyle() | java.awt.Font.BOLD));
        coversTextField1.setForeground(new java.awt.Color(44, 62, 80));

        coveredByTextField1.setEditable(false);
        coveredByTextField1.setBackground(new java.awt.Color(236, 240, 241));
        coveredByTextField1.setFont(coveredByTextField1.getFont().deriveFont(coveredByTextField1.getFont().getStyle() | java.awt.Font.BOLD));
        coveredByTextField1.setForeground(new java.awt.Color(44, 62, 80));

        BAjLabel4.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        BAjLabel4.setForeground(new java.awt.Color(44, 62, 80));
        BAjLabel4.setText("BA");

        GeometryDrawjLabel6.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        GeometryDrawjLabel6.setForeground(new java.awt.Color(44, 62, 80));
        GeometryDrawjLabel6.setText("GEOMETRY DRAW");

        DevelopedByjLabel7.setFont(new java.awt.Font("Dialog", 1, 13)); // NOI18N
        DevelopedByjLabel7.setForeground(new java.awt.Color(44, 62, 80));
        DevelopedByjLabel7.setText("Developed by @rodgeraraujo");

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(geometryALabel)
                            .addComponent(geometryATextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(geometryBLabel)
                            .addComponent(geometryBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(SVGjPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(GeometryDrawjLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(equalsLabel)
                            .addComponent(intersectsLabel)
                            .addComponent(containsLabel)
                            .addComponent(overlapsLabel)
                            .addComponent(coversLabel)
                            .addComponent(coveredByLabel)
                            .addComponent(withinLabel)
                            .addComponent(crossesLabel)
                            .addComponent(touchesLabel)
                            .addComponent(disjointLabel))
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelLayout.createSequentialGroup()
                                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(intersectsTextField)
                                                .addComponent(disjointTextField)
                                                .addComponent(touchesTextField)
                                                .addComponent(crossesTextField)
                                                .addComponent(withinTextField)
                                                .addComponent(containsTextField)
                                                .addComponent(overlapsTextField)
                                                .addComponent(coveredByTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(coversTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(equalsTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                                        .addComponent(ABjLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(15, 15, 15)))
                                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(equalsTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(disjointTextField1)
                                    .addComponent(intersectsTextField1)
                                    .addComponent(touchesTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(crossesTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(withinTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(containsTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(overlapsTextField1, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(coveredByTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                                                .addComponent(BAjLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(9, 9, 9))))))
                            .addGroup(panelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(coversTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(10, 10, 10))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(processButton, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(222, 222, 222)
                .addComponent(DevelopedByjLabel7)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(geometryALabel)
                    .addComponent(geometryBLabel))
                .addGap(1, 1, 1)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(geometryATextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(geometryBTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(processButton))
                .addGap(34, 34, 34)
                .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ABjLabel1)
                            .addComponent(BAjLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(equalsLabel)
                            .addComponent(equalsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(equalsTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(disjointTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(disjointLabel)
                            .addComponent(disjointTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(intersectsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(intersectsTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(intersectsLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(touchesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(touchesLabel)
                            .addComponent(touchesTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(crossesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(crossesLabel)
                            .addComponent(crossesTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(withinTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(withinLabel)
                            .addComponent(withinTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(containsLabel)
                            .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(containsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(containsTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(overlapsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(overlapsLabel)
                            .addComponent(overlapsTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(coversTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(coversLabel)
                            .addComponent(coversTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(coveredByLabel)
                            .addComponent(coveredByTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(coveredByTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelLayout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(GeometryDrawjLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SVGjPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(DevelopedByjLabel7)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void equalsTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equalsTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_equalsTextField1ActionPerformed

    private void geometryATextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_geometryATextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_geometryATextFieldActionPerformed

    private void processActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_processActionPerformed
        try {
            String GeometryA = geometryATextField.getText();
            String GeometryB = geometryBTextField.getText();

            if (!GeometryA.equals("") && !GeometryB.equals("")) {

                WKTReader reader = new WKTReader();

                com.vividsolutions.jts.geom.Geometry geometryA = reader.read(GeometryA);
                com.vividsolutions.jts.geom.Geometry geometryB = reader.read(GeometryB);

                //Get viewBox
                ViewBox cViewBox = new ViewBox(geometryA, geometryB);
                String viewBoxValue = cViewBox.getViewBox();
                System.out.println("Value of viewBox is: " + viewBoxValue);

                //Get path geometryA
                String pathGeometryAValue = SvgFactory.getSvg(geometryA);
                String pathGeometryBValue = SvgFactory.getSvg(geometryB);

                System.out.println("Value of path to geometry A is: " + pathGeometryAValue);
                System.out.println("Value of path to geometry B is: " + pathGeometryBValue);

                //AB
                equalsTextField.setText("" + geometryA.equals(geometryB));
                disjointTextField.setText("" + geometryA.disjoint(geometryB));
                intersectsTextField.setText("" + geometryA.intersects(geometryB));
                touchesTextField.setText("" + geometryA.touches(geometryB));
                crossesTextField.setText("" + geometryA.crosses(geometryB));
                withinTextField.setText("" + geometryA.within(geometryB));
                containsTextField.setText("" + geometryA.contains(geometryB));
                overlapsTextField.setText("" + geometryA.overlaps(geometryB));
                coversTextField.setText("" + geometryA.covers(geometryB));
                coveredByTextField.setText("" + geometryA.coveredBy(geometryB));

                //BA
                equalsTextField1.setText("" + geometryB.equals(geometryA));
                disjointTextField1.setText("" + geometryB.disjoint(geometryA));
                intersectsTextField1.setText("" + geometryB.intersects(geometryA));
                touchesTextField1.setText("" + geometryB.touches(geometryA));
                crossesTextField1.setText("" + geometryB.crosses(geometryA));
                withinTextField1.setText("" + geometryB.within(geometryA));
                containsTextField1.setText("" + geometryB.contains(geometryA));
                overlapsTextField1.setText("" + geometryB.overlaps(geometryA));
                coversTextField1.setText("" + geometryB.covers(geometryA));
                coveredByTextField1.setText("" + geometryB.coveredBy(geometryA));

                //Create SVG image
                Writer writer = null;

                try {
                    writer = new BufferedWriter(new OutputStreamWriter(
                        new FileOutputStream("figura.svg"), "utf-8"));
                writer.write("<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" +
                    "\n" +
                    "<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n" +
                    "\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">	\n" +
                    "\n" +
                    "<svg xmlns=\"http://www.w3.org/2000/svg\" \n" +
                    "	 xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"200\" height=\"200\" viewBox=\"" + viewBoxValue + "\">\n" +
                    "       <path d=\"" + pathGeometryAValue + "\"\n" +
                    "             fill=\"red\" fill-opacity=\"0.5\"\n" +
                    "             onmouseout=\"Normal(evt)\"\n" +
                    "             onmouseover=\"Destaca(evt)\"/>\n" +
                    "\n" +
                    "       <path d=\"" + pathGeometryBValue + "\"\n" +                   
                    "             fill=\"blue\" fill-opacity=\"0.5\"\n" +
                    "             onmouseout=\"Normal(evt)\"\n" +
                    "             onmouseover=\"Destaca(evt)\"/>\n" +
                    "</svg>");
            } catch (IOException ex) {
                // Report
            } finally {
                try {writer.close();} catch (Exception ex) {/*ignore*/}
            }

            //SVG to JPG
            JPEGTranscoder t = new JPEGTranscoder();
            t.addTranscodingHint(JPEGTranscoder.KEY_QUALITY,
                new Float(.8));

            String svgURI = new File("figura.svg").toURI().toURL().toString();
            TranscoderInput input = new TranscoderInput(svgURI);
            t.addTranscodingHint(JPEGTranscoder.KEY_WIDTH, new Float(336));

            OutputStream ostream = new FileOutputStream("figura.jpg");
            TranscoderOutput output = new TranscoderOutput(ostream);

            t.transcode(input, output);
            
            JpgImagejLabel3.setIcon(new ImageIcon(ImageIO.read(new File("figura.jpg"))));

            ostream.flush();
            ostream.close();

        } else {

            JOptionPane.showMessageDialog(this, "geometry empty", "Error",
                JOptionPane.ERROR_MESSAGE);

            equalsTextField.setText("");
            disjointTextField.setText("");
            intersectsTextField.setText("");
            touchesTextField.setText("");
            crossesTextField.setText("");
            withinTextField.setText("");
            containsTextField.setText("");
            overlapsTextField.setText("");
            coversTextField.setText("");
            coveredByTextField.setText("");
        }
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error",
                JOptionPane.ERROR_MESSAGE);
        } catch (MalformedURLException ex) {
            Logger.getLogger(Geometry.class.getName()).log(Level.SEVERE, null, ex);
        } catch (FileNotFoundException ex) {
            Logger.getLogger(Geometry.class.getName()).log(Level.SEVERE, null, ex);
        } catch (TranscoderException ex) {
            Logger.getLogger(Geometry.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(Geometry.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_processActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Geometry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Geometry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Geometry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Geometry.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Geometry().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel ABjLabel1;
    private javax.swing.JLabel BAjLabel4;
    private javax.swing.JLabel DevelopedByjLabel7;
    private javax.swing.JLabel GeometryDrawjLabel6;
    private javax.swing.JLabel JpgImagejLabel3;
    private javax.swing.JPanel SVGjPanel1;
    private javax.swing.JLabel containsLabel;
    private javax.swing.JTextField containsTextField;
    private javax.swing.JTextField containsTextField1;
    private javax.swing.JLabel coveredByLabel;
    private javax.swing.JTextField coveredByTextField;
    private javax.swing.JTextField coveredByTextField1;
    private javax.swing.JLabel coversLabel;
    private javax.swing.JTextField coversTextField;
    private javax.swing.JTextField coversTextField1;
    private javax.swing.JLabel crossesLabel;
    private javax.swing.JTextField crossesTextField;
    private javax.swing.JTextField crossesTextField1;
    private javax.swing.JLabel disjointLabel;
    private javax.swing.JTextField disjointTextField;
    private javax.swing.JTextField disjointTextField1;
    private javax.swing.JLabel equalsLabel;
    private javax.swing.JTextField equalsTextField;
    private javax.swing.JTextField equalsTextField1;
    private javax.swing.JLabel geometryALabel;
    private javax.swing.JTextField geometryATextField;
    private javax.swing.JLabel geometryBLabel;
    private javax.swing.JTextField geometryBTextField;
    private javax.swing.JLabel intersectsLabel;
    private javax.swing.JTextField intersectsTextField;
    private javax.swing.JTextField intersectsTextField1;
    private javax.swing.JLabel overlapsLabel;
    private javax.swing.JTextField overlapsTextField;
    private javax.swing.JTextField overlapsTextField1;
    private javax.swing.JPanel panel;
    private javax.swing.JButton processButton;
    private javax.swing.JLabel touchesLabel;
    private javax.swing.JTextField touchesTextField;
    private javax.swing.JTextField touchesTextField1;
    private javax.swing.JLabel withinLabel;
    private javax.swing.JTextField withinTextField;
    private javax.swing.JTextField withinTextField1;
    // End of variables declaration//GEN-END:variables

}
